import os
import ImageProcessing
import random
import numpy as np
import math
from tensorflow import keras
import tensorflow as tf

# This file was used to classify images associated to benign files using the blackbox detector and to store the resulting labels

def get_benimg_with_clmap():
    ds_dir = '/home/user/projects/dataset/test_images_with_colormap/GRAY/b_greyscale/'
    COLOR_MODE = 'grayscale'        
    IMAGE_HEIGHT = 256
    IMAGE_WIDTH = 256
    BATCH_SIZE = 64
    SEED = 1337
    gan_set = keras.preprocessing.image_dataset_from_directory(
        ds_dir,
        label_mode = None,
        color_mode=COLOR_MODE,
        seed=SEED,
        interpolation="area",
        batch_size=BATCH_SIZE,
        image_size=(IMAGE_HEIGHT, IMAGE_WIDTH),
        shuffle=False
    )
    return gan_set

bb_detector = tf.keras.models.load_model('/home/user/projects/GAN_project/RESULTS/saved_models/bb_trained.h5')
gan_set = get_benimg_with_clmap()
bb_on_real =[]
for batch in gan_set:
    res = bb_detector.predict(batch)
    bb_on_real.append(res)
output = np.array(bb_on_real)
np.save('/home/user/projects/GAN_project/labels/BB_ON_REAL_RIGHT.npy',output)